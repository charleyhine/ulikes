<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>Class: Keyword</title>
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
  <meta http-equiv="Content-Script-Type" content="text/javascript" />
  <link rel="stylesheet" href=".././rdoc-style.css" type="text/css" media="screen" />
  <script type="text/javascript">
  // <![CDATA[

  function popupCode( url ) {
    window.open(url, "Code", "resizable=yes,scrollbars=yes,toolbar=no,status=no,height=150,width=400")
  }

  function toggleCode( id ) {
    if ( document.getElementById )
      elem = document.getElementById( id );
    else if ( document.all )
      elem = eval( "document.all." + id );
    else
      return false;

    elemStyle = elem.style;
    
    if ( elemStyle.display != "block" ) {
      elemStyle.display = "block"
    } else {
      elemStyle.display = "none"
    }

    return true;
  }
  
  // Make codeblocks hidden by default
  document.writeln( "<style type=\"text/css\">div.method-source-code { display: none }</style>" )
  
  // ]]>
  </script>

</head>
<body>



    <div id="classHeader">
        <table class="header-table">
        <tr class="top-aligned-row">
          <td><strong>Class</strong></td>
          <td class="class-name-in-header">Keyword</td>
        </tr>
        <tr class="top-aligned-row">
            <td><strong>In:</strong></td>
            <td>
                <a href="../files/app/models/keyword_rb.html">
                app/models/keyword.rb
                </a>
        <br />
            </td>
        </tr>

        <tr class="top-aligned-row">
            <td><strong>Parent:</strong></td>
            <td>
                ActiveRecord::Base
            </td>
        </tr>
        </table>
    </div>
  <!-- banner header -->

  <div id="bodyContent">



  <div id="contextContent">



   </div>

    <div id="method-list">
      <h3 class="section-bar">Methods</h3>

      <div class="name-list">
      <a href="#M000036">generate</a>&nbsp;&nbsp;
      <a href="#M000035">handle</a>&nbsp;&nbsp;
      <a href="#M000039">successor</a>&nbsp;&nbsp;
      <a href="#M000038">successor=</a>&nbsp;&nbsp;
      <a href="#M000037">upcase_value</a>&nbsp;&nbsp;
      </div>
    </div>

  </div>


    <!-- if includes -->

    <div id="section">





      


    <!-- if method_list -->
    <div id="methods">
      <h3 class="section-bar">Public Class methods</h3>

      <div id="method-M000036" class="method-detail">
        <a name="M000036"></a>

        <div class="method-heading">
          <a href="#M000036" class="method-signature">
          <span class="method-name">generate</span><span class="method-args">(item)</span>
          </a>
        </div>
      
        <div class="method-description">
          <p><a class="source-toggle" href="#"
            onclick="toggleCode('M000036-source');return false;">[Source]</a></p>
          <div class="method-source-code" id="M000036-source">
<pre>
     <span class="ruby-comment cmt"># File app/models/keyword.rb, line 42</span>
 42:         <span class="ruby-keyword kw">def</span> <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">generate</span>(<span class="ruby-identifier">item</span>)
 43:                 <span class="ruby-identifier">new_keyword</span> = <span class="ruby-value str">&quot;&quot;</span>
 44:                 <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">item</span>.<span class="ruby-identifier">nil?</span> <span class="ruby-operator">||</span> <span class="ruby-identifier">item</span>.<span class="ruby-identifier">name</span>.<span class="ruby-identifier">nil?</span> <span class="ruby-operator">||</span> <span class="ruby-identifier">item</span>.<span class="ruby-identifier">name</span>.<span class="ruby-identifier">length</span> <span class="ruby-operator">&lt;</span> <span class="ruby-value">3</span>
 45:                         <span class="ruby-keyword kw">return</span> <span class="ruby-keyword kw">nil</span>
 46:                 <span class="ruby-keyword kw">end</span>
 47: 
 48:                 <span class="ruby-comment cmt">#remove unwanted characters</span>
 49:     <span class="ruby-identifier">item_name</span> = <span class="ruby-constant">String</span>.<span class="ruby-identifier">new</span>(<span class="ruby-identifier">item</span>.<span class="ruby-identifier">name</span>)
 50:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;0&quot;</span>, <span class="ruby-value str">&quot;zero&quot;</span>)
 51:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;1&quot;</span>, <span class="ruby-value str">&quot;one&quot;</span>)
 52:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;2&quot;</span>, <span class="ruby-value str">&quot;two&quot;</span>)
 53:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;3&quot;</span>, <span class="ruby-value str">&quot;three&quot;</span>)
 54:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;4&quot;</span>, <span class="ruby-value str">&quot;four&quot;</span>)
 55:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;5&quot;</span>, <span class="ruby-value str">&quot;five&quot;</span>)
 56:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;6&quot;</span>, <span class="ruby-value str">&quot;six&quot;</span>)
 57:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;7&quot;</span>, <span class="ruby-value str">&quot;seven&quot;</span>)
 58:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;8&quot;</span>, <span class="ruby-value str">&quot;eight&quot;</span>)
 59:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-value str">&quot;9&quot;</span>, <span class="ruby-value str">&quot;nine&quot;</span>)
 60:     <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">gsub!</span>(<span class="ruby-regexp re">/([^A-Z])/i</span> ,<span class="ruby-value str">&quot;&quot;</span>)
 61:                 <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">upcase!</span>
 62:     <span class="ruby-identifier">puts</span> <span class="ruby-identifier">item_name</span>
 63: 
 64:                 <span class="ruby-comment cmt">#see if the item name can be split into 3 parts</span>
 65:                 <span class="ruby-comment cmt">#then generate an &quot;acronym&quot; if it can</span>
 66:                 <span class="ruby-comment cmt">#otherwise just use the first 3 or 4 letters of the item's name</span>
 67:                 <span class="ruby-identifier">parts</span> = <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">split</span>
 68:                 <span class="ruby-identifier">puts</span> <span class="ruby-identifier">parts</span>.<span class="ruby-identifier">inspect</span>
 69:                 <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">parts</span>.<span class="ruby-identifier">size</span> <span class="ruby-operator">&gt;=</span> <span class="ruby-value">3</span>
 70:                         <span class="ruby-keyword kw">for</span> <span class="ruby-identifier">i</span> <span class="ruby-keyword kw">in</span> <span class="ruby-value">0</span><span class="ruby-operator">...</span><span class="ruby-value">3</span>
 71:                             <span class="ruby-comment cmt"># take the first letter</span>
 72:                                 <span class="ruby-identifier">new_keyword</span> = <span class="ruby-identifier">new_keyword</span> <span class="ruby-operator">+</span> <span class="ruby-identifier">parts</span>[<span class="ruby-identifier">i</span>].<span class="ruby-identifier">split</span>(<span class="ruby-regexp re">//</span>)[<span class="ruby-value">0</span>]
 73:                         <span class="ruby-keyword kw">end</span>
 74:                 <span class="ruby-keyword kw">elsif</span> <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">length</span> <span class="ruby-operator">&gt;=</span> <span class="ruby-value">3</span> 
 75:                     <span class="ruby-identifier">new_keyword</span> = <span class="ruby-identifier">item_name</span>[<span class="ruby-value">0</span>,<span class="ruby-value">3</span>]
 76:                 <span class="ruby-keyword kw">elsif</span> <span class="ruby-identifier">item_name</span>.<span class="ruby-identifier">length</span> <span class="ruby-operator">&gt;=</span> <span class="ruby-value">4</span> 
 77:                         <span class="ruby-identifier">new_keyword</span> = <span class="ruby-identifier">item_name</span>[<span class="ruby-value">0</span>,<span class="ruby-value">4</span>]
 78:                 <span class="ruby-keyword kw">end</span>
 79: 
 80:     <span class="ruby-identifier">puts</span> <span class="ruby-identifier">new_keyword</span>
 81:                 <span class="ruby-comment cmt">#log.debug(&quot;Generate Keyword: #{new_keyword}&quot;)</span>
 82:                 <span class="ruby-identifier">keyword</span> = <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">find_by_value</span>(<span class="ruby-identifier">new_keyword</span>)
 83: 
 84:     <span class="ruby-comment cmt">#this adds the city's initials if the keyword/item_name exist then</span>
 85:     <span class="ruby-comment cmt">#allows for up to 11 keywords per three letter combination</span>
 86:                 <span class="ruby-comment cmt">#then it moves to the next closest letters in the alphabet</span>
 87:     <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">keyword</span> <span class="ruby-operator">!=</span> <span class="ruby-keyword kw">nil</span> <span class="ruby-operator">&amp;&amp;</span> <span class="ruby-constant">Item</span>.<span class="ruby-identifier">exists?</span>(<span class="ruby-identifier">:name</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-identifier">item</span>.<span class="ruby-identifier">name</span>)
 88:       <span class="ruby-identifier">the_city</span> = <span class="ruby-constant">City</span>.<span class="ruby-identifier">find_by_id</span>(<span class="ruby-identifier">item</span>.<span class="ruby-identifier">city_id</span>)
 89:                   <span class="ruby-identifier">city_words</span> = <span class="ruby-identifier">the_city</span>.<span class="ruby-identifier">name</span>.<span class="ruby-identifier">split</span>
 90:       <span class="ruby-identifier">city_abbrev</span> = <span class="ruby-value str">&quot;&quot;</span>
 91:       <span class="ruby-keyword kw">for</span> <span class="ruby-identifier">i</span> <span class="ruby-keyword kw">in</span> <span class="ruby-value">0</span><span class="ruby-operator">...</span><span class="ruby-value">3</span>
 92:           <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">city_words</span>[<span class="ruby-identifier">i</span>] <span class="ruby-operator">!=</span> <span class="ruby-keyword kw">nil</span>
 93:             <span class="ruby-identifier">city_abbrev</span> = <span class="ruby-identifier">city_abbrev</span> <span class="ruby-operator">+</span> <span class="ruby-identifier">city_words</span>[<span class="ruby-identifier">i</span>].<span class="ruby-identifier">split</span>(<span class="ruby-regexp re">//</span>)[<span class="ruby-value">0</span>]
 94:           <span class="ruby-keyword kw">end</span>
 95:       <span class="ruby-keyword kw">end</span>
 96:       <span class="ruby-identifier">new_keyword</span> = <span class="ruby-identifier">new_keyword</span> <span class="ruby-operator">+</span> <span class="ruby-identifier">city_abbrev</span>
 97:     <span class="ruby-keyword kw">end</span>
 98:        
 99:                 <span class="ruby-identifier">new_keyword</span> = <span class="ruby-identifier">new_keyword</span> <span class="ruby-operator">+</span> <span class="ruby-value str">&quot;0&quot;</span> <span class="ruby-keyword kw">unless</span> <span class="ruby-identifier">keyword</span>.<span class="ruby-identifier">nil?</span>
100:                 <span class="ruby-keyword kw">until</span> <span class="ruby-identifier">keyword</span>.<span class="ruby-identifier">nil?</span>    
101:                         <span class="ruby-identifier">new_keyword</span>.<span class="ruby-identifier">succ!</span>
102:                         <span class="ruby-comment cmt">#log.debug(&quot;Generate Keyword: #{new_keyword}&quot;)</span>
103:                         <span class="ruby-identifier">keyword</span> = <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">find_by_value</span>(<span class="ruby-identifier">new_keyword</span>)
104:                 <span class="ruby-keyword kw">end</span>   
105:                 <span class="ruby-identifier">keyword</span> = <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">new</span>( <span class="ruby-identifier">:value</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-identifier">new_keyword</span>.<span class="ruby-identifier">upcase</span> )
106:         <span class="ruby-keyword kw">end</span>
</pre>
          </div>
        </div>
      </div>

      <div id="method-M000035" class="method-detail">
        <a name="M000035"></a>

        <div class="method-heading">
          <a href="#M000035" class="method-signature">
          <span class="method-name">handle</span><span class="method-args">(conversation)</span>
          </a>
        </div>
      
        <div class="method-description">
          <p><a class="source-toggle" href="#"
            onclick="toggleCode('M000035-source');return false;">[Source]</a></p>
          <div class="method-source-code" id="M000035-source">
<pre>
    <span class="ruby-comment cmt"># File app/models/keyword.rb, line 12</span>
12:         <span class="ruby-keyword kw">def</span> <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">handle</span>(<span class="ruby-identifier">conversation</span>)
13: 
14:                 <span class="ruby-comment cmt">#get the first word of the message</span>
15:                 <span class="ruby-identifier">to_find</span> = <span class="ruby-identifier">conversation</span>.<span class="ruby-identifier">current_message</span>.<span class="ruby-identifier">data</span>.<span class="ruby-identifier">split</span>[<span class="ruby-value">0</span>]
16:                 <span class="ruby-identifier">to_find</span>.<span class="ruby-identifier">upcase!</span>
17: 
18:                 <span class="ruby-identifier">log</span>.<span class="ruby-identifier">debug</span>(<span class="ruby-node">&quot;Trying to find keyword for: #{to_find}&quot;</span>)
19:                 <span class="ruby-identifier">keyword</span> = <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">find_by_value</span>(<span class="ruby-identifier">to_find</span>) 
20: 
21:                 <span class="ruby-keyword kw">if</span> <span class="ruby-identifier">keyword</span>.<span class="ruby-identifier">nil?</span>
22:                         <span class="ruby-comment cmt">#go to next step in processor</span>
23:                         <span class="ruby-keyword kw">if</span> <span class="ruby-operator">!</span><span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">successor</span>.<span class="ruby-identifier">nil?</span>
24:                                 <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">successor</span>.<span class="ruby-identifier">handle</span>(<span class="ruby-identifier">conversation</span>)
25:                         <span class="ruby-keyword kw">end</span>
26:                 <span class="ruby-keyword kw">else</span>
27:                         <span class="ruby-identifier">log_handle</span>(<span class="ruby-constant">Keyword</span>, <span class="ruby-identifier">conversation</span>)
28: 
29:                         <span class="ruby-identifier">item</span> = <span class="ruby-identifier">keyword</span>.<span class="ruby-identifier">item</span>
30:                         <span class="ruby-identifier">item_text</span> = <span class="ruby-node">&quot;'#{item.name}' in #{item.city.name}, #{item.state.abbreviation}&quot;</span>
31: 
32:       <span class="ruby-constant">Vote</span>.<span class="ruby-identifier">cast_and_respond</span>(<span class="ruby-identifier">item</span>, <span class="ruby-identifier">conversation</span>)
33: 
34:                         <span class="ruby-identifier">step</span> = <span class="ruby-constant">KeywordStep</span>.<span class="ruby-identifier">new</span>( <span class="ruby-identifier">:keyword</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-identifier">keyword</span>, 
35:                                                                                                                         <span class="ruby-identifier">:message</span> =<span class="ruby-operator">&gt;</span> <span class="ruby-identifier">conversation</span>.<span class="ruby-identifier">current_message</span> )
36:                         <span class="ruby-identifier">conversation</span>.<span class="ruby-identifier">steps</span> <span class="ruby-operator">&lt;&lt;</span> <span class="ruby-identifier">step</span>
37:                         <span class="ruby-identifier">conversation</span>.<span class="ruby-identifier">state</span> = <span class="ruby-constant">ConversationState</span><span class="ruby-operator">::</span><span class="ruby-constant">CLOSED</span>
38:                         <span class="ruby-identifier">conversation</span>.<span class="ruby-identifier">save</span>
39:                 <span class="ruby-keyword kw">end</span>
40:         <span class="ruby-keyword kw">end</span>
</pre>
          </div>
        </div>
      </div>

      <div id="method-M000039" class="method-detail">
        <a name="M000039"></a>

        <div class="method-heading">
          <a href="#M000039" class="method-signature">
          <span class="method-name">successor</span><span class="method-args">()</span>
          </a>
        </div>
      
        <div class="method-description">
          <p><a class="source-toggle" href="#"
            onclick="toggleCode('M000039-source');return false;">[Source]</a></p>
          <div class="method-source-code" id="M000039-source">
<pre>
     <span class="ruby-comment cmt"># File app/models/keyword.rb, line 119</span>
119:         <span class="ruby-keyword kw">def</span> <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">successor</span>
120:                 <span class="ruby-keyword kw">return</span> <span class="ruby-identifier">successor</span>
121:         <span class="ruby-keyword kw">end</span>
</pre>
          </div>
        </div>
      </div>

      <div id="method-M000038" class="method-detail">
        <a name="M000038"></a>

        <div class="method-heading">
          <a href="#M000038" class="method-signature">
          <span class="method-name">successor=</span><span class="method-args">(successor)</span>
          </a>
        </div>
      
        <div class="method-description">
          <p>
define the default successor in the chain of command
</p>
          <p><a class="source-toggle" href="#"
            onclick="toggleCode('M000038-source');return false;">[Source]</a></p>
          <div class="method-source-code" id="M000038-source">
<pre>
     <span class="ruby-comment cmt"># File app/models/keyword.rb, line 115</span>
115:         <span class="ruby-keyword kw">def</span> <span class="ruby-constant">Keyword</span>.<span class="ruby-identifier">successor=</span>(<span class="ruby-identifier">successor</span>)
116:                 <span class="ruby-ivar">@@successor</span> = <span class="ruby-identifier">successor</span>
117:     <span class="ruby-identifier">log</span>.<span class="ruby-identifier">debug</span>(<span class="ruby-node">&quot;#{self.class}.successor = #{successor.class}&quot;</span>)
118:         <span class="ruby-keyword kw">end</span>
</pre>
          </div>
        </div>
      </div>

      <h3 class="section-bar">Public Instance methods</h3>

      <div id="method-M000037" class="method-detail">
        <a name="M000037"></a>

        <div class="method-heading">
          <a href="#M000037" class="method-signature">
          <span class="method-name">upcase_value</span><span class="method-args">()</span>
          </a>
        </div>
      
        <div class="method-description">
          <p><a class="source-toggle" href="#"
            onclick="toggleCode('M000037-source');return false;">[Source]</a></p>
          <div class="method-source-code" id="M000037-source">
<pre>
     <span class="ruby-comment cmt"># File app/models/keyword.rb, line 108</span>
108:         <span class="ruby-keyword kw">def</span> <span class="ruby-identifier">upcase_value</span>
109:                 <span class="ruby-keyword kw">if</span> <span class="ruby-operator">!</span><span class="ruby-keyword kw">self</span>.<span class="ruby-identifier">value</span>.<span class="ruby-identifier">nil?</span>
110:                         <span class="ruby-keyword kw">self</span>.<span class="ruby-identifier">value</span>.<span class="ruby-identifier">upcase!</span>
111:                 <span class="ruby-keyword kw">end</span>
112:         <span class="ruby-keyword kw">end</span>
</pre>
          </div>
        </div>
      </div>


    </div>


  </div>


<div id="validator-badges">
  <p><small><a href="http://validator.w3.org/check/referer">[Validate]</a></small></p>
</div>

</body>
</html>